#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos { compatible = "zmk,combos"; };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB         &kp Q               &kp W           &kp E               &kp R               &kp T                     &kp Y                    &kp U                &kp I                    &kp O                 &kp P                    &kp BACKSPACE
&kp ESCAPE      &hm LEFT_SHIFT A    &kp S           &kp D               &lt 4 F             &kp G                     &kp H                    &kp J                &kp K                    &kp L                 &hm RIGHT_SHIFT SEMI     &kp SQT
&kp LEFT_SHIFT  &hm LEFT_CONTROL Z  &hm LEFT_ALT X  &hm LEFT_COMMAND C  &hm LS(LEFT_ALT) V  &hm LS(LEFT_COMMAND) B    &hm RS(RIGHT_COMMAND) N  &hm RS(RIGHT_ALT) M  &hm RIGHT_COMMAND COMMA  &hm RIGHT_ALT PERIOD  &hm RIGHT_CONTROL SLASH  &kp RIGHT_SHIFT
                                                    &mo 1               &lt 2 SPACE         &lt 3 RET                 &lt 3 RET                &lt 2 SPACE          &mo 1
            >;
        };

        FnNav {
            display-name = "FnNav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5              &kp F6                  &kp F7          &kp F8          &kp F9        &kp F10          &kp F11   &kp F12
&caps_word  &trans        &trans        &trans        &trans              &trans                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp HOME  &kp PAGE_UP
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans              &trans                  &trans          &trans          &trans        &trans           &kp END   &kp PAGE_DOWN
                                        &trans        &kp LS(LEFT_SHIFT)  &kp LC(LEFT_CONTROL)    &trans          &trans          &trans
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH           &kp DOLLAR       &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans         &trans           &trans       &trans             &trans           &trans         &kp MINUS  &kp EQUAL      &kp LBKT      &kp RBKT              &kp BSLH               &kp PIPE
&kp C_BRI_DEC  &kp C_BRI_INC    &kp K_MUTE   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans         &kp UNDER  &kp PLUS       &kp LBRC      &kp RBRC              &trans                 &trans
                                             &trans             &trans           &trans         &trans     &trans         &trans
            >;
        };

        Numbers {
            display-name = "Numbers";
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2          &kp NUMBER_3          &kp NUMBER_4    &kp N5    &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans        &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))  &trans    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans                &trans                &trans          &trans    &trans        &trans  &trans  &trans  &trans  &trans
                                            &trans                &trans          &trans    &kp EQUAL     &trans  &trans
            >;
        };

        NumPad {
            display-name = "NumPad";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N7  &kp N8     &kp N9  &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp N4  &kp N5     &kp N6  &trans      &kp ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp N1  &kp N2     &kp N3  &kp PERIOD  &kp SLASH
                        &trans  &trans  &trans    &kp RET    &kp N0  &kp EQUAL
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
